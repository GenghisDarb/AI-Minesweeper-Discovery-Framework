name: CI

on:
  push:
  pull_request:

permissions:
  contents: read
  id-token: write

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Install Ruff
        run: pip install ruff
      - name: Run Ruff linter
        run: ruff check src tests
      - name: Ensure single import path
        run: python scripts/ensure_single_module.py
      - name: Install MyPy
        run: pip install mypy
      - name: Run MyPy type checker
        run: mypy -p ai_minesweeper
      - name: Run PyLint
        run: pylint src/ --disable=missing-docstring,invalid-name,too-few-public-methods

  tests:
    runs-on: ubuntu-latest
    needs: [lint]
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Install Streamlit
        run: pip install streamlit
      - name: Install pdfplumber
        run: pip install pdfplumber
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/src" >> $GITHUB_ENV
      - name: Run tests with coverage
        run: |
          coverage run -m pytest tests/test_confidence_policy.py
          coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml
          flags: unittests
          name: minesweeper-ci
      - name: Enforce coverage thresholds
        run: pytest --cov=src --cov-fail-under=90 --cov-report=term-missing
      - name: Run new unit tests
        run: |
          pytest tests/test_primes_chi.py
          pytest tests/test_phase_lock_phi.py
      - name: Run solver tests
        run: pytest tests/test_solver_basic.py
      - name: Run periodic table tests
        run: pytest tests/test_periodic_table.py
      - name: Run meta-cell confidence tests
        run: pytest tests/test_beta_confidence.py tests/test_confidence_policy.py tests/test_ui_widgets.py
      - name: Run tests
        run: |
          pytest --cov=ai_minesweeper --cov-report=xml

  docs:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install MkDocs and plugins
        run: |
          pip install mkdocs mkdocs-material mkdocs-autorefs mkdocstrings mkdocstrings-python
      - name: Build documentation
        run: mkdocs build --strict

  deploy:
    needs: [tests, docs]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .[dev]
      - name: Install runtime dependencies
        run: pip install -r requirements.txt
      - name: Build static Streamlit app
        run: |
          pip install streamlit-static
          streamlit-static export streamlit_app.py --output-dir dist
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
    env:
      PYTHONPATH: ${{ github.workspace }}
