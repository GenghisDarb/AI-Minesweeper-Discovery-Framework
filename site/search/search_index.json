{
  "config": {
    "lang": ["en"],
    "separator": "[\\s\\-]+",
    "pipeline": ["stopWordFilter"]
  },
  "docs": [
    {
      "location": "",
      "title": "AI Minesweeper Discovery Framework",
      "text": "<p>The AI Minesweeper Discovery Framework is a comprehensive toolkit designed to facilitate the development and testing of AI algorithms for the classic Minesweeper game. It provides a robust environment for researchers and enthusiasts to explore various AI techniques and strategies, enabling them to understand and improve the performance of their algorithms in a controlled setting.</p> <p>With a focus on ease of use and extensibility, the framework offers a range of features including customizable game boards, AI agent integration, and performance analysis tools. Whether you're a seasoned AI researcher or a newcomer to the field, this framework provides the resources you need to delve into the world of AI-driven Minesweeper.</p>"
    },
    {
      "location": "#installation",
      "title": "Installation",
      "text": "<p>To install the framework, use the following command:</p> <pre><code>pip install ai-minesweeper-framework\n</code></pre>"
    },
    {
      "location": "#quick-cli-example",
      "title": "Quick CLI Example",
      "text": "<p>Here's a quick example of how to run a Minesweeper game with an AI agent using the CLI:</p> <pre><code>ai-minesweeper --agent=random --board-size=10 --mines=15\n</code></pre> <p>This command runs a Minesweeper game on a 10x10 board with 15 mines, using a random AI agent.</p>"
    },
    {
      "location": "#hero-panel",
      "title": "Hero Panel",
      "text": "<p>\u03c7 Value: 50-digit \u03c7 = 1.41421356237309504880168872420969807856967187537694</p> <p></p>"
    },
    { "location": "#versions", "title": "Versions", "text": "" },
    {
      "location": "#changelog",
      "title": "Changelog",
      "text": "v0.4 - Added TORUS-brot fractal module. - Enhanced Meta-Cell Confidence Module.  v0.3 - Initial release with Minesweeper AI."
    },
    {
      "location": "#tutorials",
      "title": "Tutorials",
      "text": "<ul> <li>Discovering \u03c6-Phase Reset</li> <li>Prime Residue Recursion</li> <li>Periodic Table Demo</li> <li>Fractal Demo: Explore the \u03c7-recursive observer-state projection and its implications in Minesweeper theory.</li> </ul>"
    },
    {
      "location": "#white-paper",
      "title": "White-paper",
      "text": "<ul> <li>What is AI-Minesweeper?</li> </ul>"
    },
    {
      "location": "LLM_backends/",
      "title": "Configuring LLM Backends",
      "text": "<p>The AI Minesweeper framework supports multiple LLM backends. Follow the instructions below to configure your preferred backend.</p>"
    },
    {
      "location": "LLM_backends/#openai",
      "title": "OpenAI",
      "text": "<ol> <li>Obtain an API key from OpenAI.</li> <li>Paste the key into the environment variable <code>OPENAI_API_KEY</code>.</li> </ol>"
    },
    {
      "location": "LLM_backends/#anthropic-claude",
      "title": "Anthropic Claude",
      "text": "<ol> <li>Obtain an API key from Anthropic.</li> <li>Paste the key into the environment variable <code>CLAUDE_API_KEY</code>.</li> </ol>"
    },
    {
      "location": "LLM_backends/#local-ollama",
      "title": "Local (Ollama)",
      "text": "<ol> <li>Ensure the Ollama server is running locally.</li> <li>No API key is required for this backend.</li> </ol>"
    },
    {
      "location": "LLM_backends/#none",
      "title": "None",
      "text": "<ol> <li>Select 'none' as the backend in the Streamlit UI.</li> <li>This option disables LLM integration.</li> </ol>"
    },
    { "location": "api/", "title": "Api", "text": "" },
    {
      "location": "bicycle_validation/",
      "title": "Bicycle Ghost-Rider Validation",
      "text": "<p>Dynamic stabilization in bicycle ghost-rider simulations mirrors controller dimension theory.</p>"
    },
    {
      "location": "bicycle_validation/#key-findings",
      "title": "Key Findings",
      "text": "<ul> <li>Controller dimension principles validated through simulations.</li> <li>Empirical evidence supports theoretical predictions.</li> </ul> <p>For detailed results, refer to the validation report.</p>"
    },
    { "location": "changelog/", "title": "Changelog", "text": "" },
    {
      "location": "changelog/#v04-torus-brot-and-meta-cell-update-2025-07",
      "title": "v0.4 \u2013 TORUS-brot and Meta-Cell Update (2025-07)",
      "text": "<ul> <li>Integrated TORUS-brot fractal module (renderer, data, notebook, documentation).</li> <li>Streamlit app now includes TORUS-brot demo domain.</li> <li>Meta-Cell Confidence Module can be toggled; added UI visualization of solver confidence.</li> <li>Improved documentation (README, glossary) to explain new features and theoretical context.</li> </ul>"
    },
    {
      "location": "ci_setup/",
      "title": "GitHub Actions &amp; Security Setup",
      "text": "Secret Where to add Scope <code>CODECOV_TOKEN</code> Settings \u2192 Secrets \u2192 Actions repository <ol> <li> <p>Go to Settings \u2192 Actions \u2192 General and set:    \u2022 Workflow permissions \u2192 Read and write permissions \u2714    \u2022 Allow GitHub Actions to create and approve pull requests (optional).</p> </li> <li> <p>If self-hosted runners are used, ensure they have the correct labels and are online.</p> </li> </ol> <p>Workflows will fail fast with a clear error if <code>CODECOV_TOKEN</code> is absent.</p>"
    },
    {
      "location": "citation_map/",
      "title": "Citation Map",
      "text": "Code Folder TORUS Supplement Section <code>src/ai_minesweeper/</code> Sec. 3.3: \u03c7-Cycle Recursion <code>src/ai_minesweeper/meta_cell_confidence/</code> Sec. 4.1: Controller Dimension <code>examples/</code> Sec. 5.2: Empirical Tests <code>docs/</code> Sec. 6.1: Theory Overview"
    },
    {
      "location": "confidence_osc/",
      "title": "Confidence Oscillation",
      "text": "<p>Visualize the damped \u03c7-wave fit to solver confidence history.</p> <p></p> <p>Parameters: - Amplitude: ... - Decay rate: ... - Period: ...</p>"
    },
    {
      "location": "contributor_guide/",
      "title": "Contributor Guide",
      "text": ""
    },
    {
      "location": "contributor_guide/#extending-torus-brot",
      "title": "Extending TORUS-brot",
      "text": "<ul> <li>Experiment with higher-order fractals or link with external fractal libraries.</li> <li>Explore mini \"satellite\" copies and measure their scaling to compare with Feigenbaum\u2019s delta for \u03c7-cycle.</li> <li>Introduce random variations each iteration to mimic observer effects and analyze fractal boundary deformation.</li> </ul>"
    },
    {
      "location": "contributor_guide/#improving-meta-cell",
      "title": "Improving Meta-Cell",
      "text": "<ul> <li>Implement more sophisticated Bayesian updates or alternative risk strategies.</li> <li>Enhance confidence visualization with historical trends or interactive charts.</li> <li>Optimize solver integration for larger boards or complex domains.</li> </ul>"
    },
    {
      "location": "contributor_guide/#general-contribution-tips",
      "title": "General Contribution Tips",
      "text": "<ul> <li>Follow the modular design principles outlined in the README.</li> <li>Ensure all new features are documented and tested.</li> <li>Run <code>pytest</code> to verify that all tests pass before submitting a pull request.</li> </ul>"
    },
    {
      "location": "design_meta_cell/",
      "title": "Meta-Cell Confidence Module",
      "text": ""
    },
    {
      "location": "design_meta_cell/#overview",
      "title": "Overview",
      "text": "<p>The Meta-Cell Confidence Module introduces a feedback loop to dynamically adjust the solver's risk tolerance based on its prediction accuracy. Inspired by TORUS Theory's controller dimension, this module ensures the solver maintains a balanced strategy between exploration and exploitation.</p>"
    },
    {
      "location": "design_meta_cell/#rationale",
      "title": "Rationale",
      "text": "<p>The Meta-Cell Confidence Module dynamically adjusts risk tolerance based on solver accuracy. Using a Beta distribution, it tracks success rates and tunes the solver's behavior.</p>"
    },
    {
      "location": "design_meta_cell/#betaconfidence-class",
      "title": "BetaConfidence Class",
      "text": "<p>Tracks solver confidence using a Beta distribution. Updates confidence based on prediction accuracy using the Brier score.</p>"
    },
    {
      "location": "design_meta_cell/#confidencepolicy-class",
      "title": "ConfidencePolicy Class",
      "text": "<p>Wraps the base solver to adjust move selection based on confidence. Implements a risk threshold that varies with confidence level.</p>"
    },
    {
      "location": "design_meta_cell/#visualization",
      "title": "Visualization",
      "text": "<p>Displays confidence in GUI (Streamlit) or CLI mode, providing real-time feedback on solver calibration.</p>"
    },
    {
      "location": "design_meta_cell/#expected-outcomes",
      "title": "Expected Outcomes",
      "text": "<p>Confidence oscillates over time, reflecting the solver's self-correcting mechanism. This aligns with TORUS Theory's \u03c7-cycle structure.</p>"
    },
    {
      "location": "design_meta_cell/#usage",
      "title": "Usage",
      "text": "<p>To enable the confidence module, wrap the base solver with ConfidencePolicy and use BetaConfidence for tracking.</p> <p>Wrap your solver with <code>ConfidencePolicy</code>:</p> <pre><code>from ai_minesweeper.meta_cell_confidence.policy_wrapper import ConfidencePolicy\nfrom ai_minesweeper.meta_cell_confidence.confidence import BetaConfidence\n\nconfidence = BetaConfidence()\npolicy = ConfidencePolicy(base_solver=RiskAssessor, confidence=confidence)\nmove = policy.choose_move(board)\n</code></pre> <p>See the <code>confidence_oscillation_demo.ipynb</code> notebook for a practical demonstration.</p>"
    },
    { "location": "glossary/", "title": "Glossary &amp; FAQ", "text": "" },
    { "location": "glossary/#glossary", "title": "Glossary", "text": "" },
    {
      "location": "glossary/#-cycle",
      "title": "\u03c7-cycle",
      "text": "<p>Recursive patterns in data, such as prime residue distributions or noise patterns.</p>"
    },
    {
      "location": "glossary/#controller-dimension",
      "title": "Controller Dimension",
      "text": "<p>Theory explaining dynamic stabilization in systems.</p>"
    },
    {
      "location": "glossary/#erc",
      "title": "ERC",
      "text": "<p>Empirical Recursive Cycle, a statistical measure of \u03c7-cycle significance.</p> <p>For more terms, refer to the TORUS Theory paper.</p>"
    },
    { "location": "glossary/#faq", "title": "FAQ", "text": "" },
    {
      "location": "glossary/#what-is-the-significance-of-8-evidence",
      "title": "What is the significance of 8-\u03c3 evidence?",
      "text": "<p>8-\u03c3 corresponds to a 1 in 10\u00b9\u2075 chance of coincidence, indicating extremely high credibility.</p>"
    },
    {
      "location": "glossary/#how-does-the-controller-dimension-apply-to-minesweeper",
      "title": "How does the controller dimension apply to Minesweeper?",
      "text": "<p>It modulates the solver's risk tolerance, balancing exploration and exploitation phases.</p>"
    },
    {
      "location": "glossary/#what-domains-has-torus-theory-been-validated-in",
      "title": "What domains has TORUS Theory been validated in?",
      "text": "<p>Gravitational wave detectors, prime spirals, and dynamic systems like bicycle stabilization.</p>"
    },
    {
      "location": "gw_validation/",
      "title": "Gravitational Wave Validation",
      "text": "<p>Empirical evidence shows 8-\u03c3 significance of \u03c7-cycle patterns in noise data from gravitational wave detectors.</p>"
    },
    {
      "location": "gw_validation/#key-findings",
      "title": "Key Findings",
      "text": "<ul> <li>Recursive \u03c7-cycle patterns detected in detector noise.</li> <li>Validation performed using statistical analysis.</li> </ul> <p>For detailed results, refer to the validation report.</p>"
    },
    {
      "location": "meg_protocol_outline/",
      "title": "IRB-Ready MEG Protocol Outline",
      "text": ""
    },
    {
      "location": "meg_protocol_outline/#objective",
      "title": "Objective",
      "text": "<p>Investigate \u03c7-cycle oscillations in neural activity using MEG.</p>"
    },
    {
      "location": "meg_protocol_outline/#participants",
      "title": "Participants",
      "text": "<ul> <li>20 healthy adults aged 18\u201335.</li> <li>Exclusion criteria: neurological disorders, metal implants.</li> </ul>"
    },
    {
      "location": "meg_protocol_outline/#procedure",
      "title": "Procedure",
      "text": "<ol> <li>Baseline recording: 5 minutes of resting-state MEG.</li> <li>Task phase: Participants play Minesweeper with confidence module active.</li> <li>Post-task recording: 5 minutes of resting-state MEG.</li> </ol>"
    },
    {
      "location": "meg_protocol_outline/#analysis",
      "title": "Analysis",
      "text": "<ul> <li>Time-frequency analysis to detect \u03c7-cycle oscillations (~14 moves).</li> <li>Correlation with confidence scores from the module.</li> </ul>"
    },
    {
      "location": "meg_protocol_outline/#ethical-considerations",
      "title": "Ethical Considerations",
      "text": "<ul> <li>Informed consent.</li> <li>Data anonymization.</li> <li>Compliance with IRB guidelines.</li> </ul>"
    },
    {
      "location": "meta_cell_usage/",
      "title": "Meta-Cell Guide",
      "text": "<p>Learn how to use the Meta-Cell Confidence Module to enhance solver stability.</p>"
    },
    {
      "location": "meta_cell_usage/#features",
      "title": "Features",
      "text": "<ul> <li>Adaptive risk tolerance.</li> <li>Real-time confidence visualization.</li> </ul>"
    },
    {
      "location": "meta_cell_usage/#usage",
      "title": "Usage",
      "text": "<p>Enable the Meta-Cell module in the Streamlit sidebar.</p>"
    },
    {
      "location": "prime_residue/",
      "title": "Prime Residue Analysis",
      "text": "<p>The S-statistic measures variance-to-mean ratio of prime residues modulo 14.</p> Residue Count 0 ... 1 ... ... ... <p>S-statistic: ...</p>"
    },
    {
      "location": "prime_spirals/",
      "title": "Prime Spirals Validation",
      "text": "<p>Prime residue distributions exhibit recursive \u03c7-cycle patterns, matching theoretical predictions.</p>"
    },
    {
      "location": "prime_spirals/#key-findings",
      "title": "Key Findings",
      "text": "<ul> <li>Mod-14 prime spirals demonstrate \u03c7-cycle recursion.</li> <li>Validation performed using computational simulations.</li> </ul> <p>For detailed results, refer to the validation report.</p>"
    },
    {
      "location": "roadmap_overview/",
      "title": "Roadmap Overview",
      "text": ""
    },
    {
      "location": "roadmap_overview/#theory",
      "title": "Theory",
      "text": "<p>TORUS Theory introduces recursive self-correction mechanisms in complex systems, leveraging the \u03c7-cycle and controller dimension to stabilize oscillatory behavior.</p>"
    },
    {
      "location": "roadmap_overview/#simulation",
      "title": "Simulation",
      "text": "<p>Simulations validate \u03c7-cycle predictions across domains: - Gravitational wave noise patterns. - Prime residue spirals. - Dynamic systems like bicycle stabilization.</p>"
    },
    {
      "location": "roadmap_overview/#empirical-tests",
      "title": "Empirical Tests",
      "text": "<p>Empirical validations demonstrate 8-\u03c3 evidence: - Gravitational wave detectors: \u03c7-cycle in noise patterns. - Prime spirals: Recursive residue patterns. - Bicycle ghost-rider: Controller dimension stabilization.</p>"
    },
    {
      "location": "roadmap_overview/#open-falsifiers",
      "title": "Open Falsifiers",
      "text": "<p>Future work includes: - Extending \u03c7-cycle predictions to new domains. - Testing controller dimension in protein-folding dynamics. - Exploring legal precedent graphs for recursive patterns.</p>"
    },
    {
      "location": "torus_brot_demo/",
      "title": "TORUS-brot Fractal Demo",
      "text": "<p>Explore the 14-fold \u03c7-recursive fractal generated by the TORUS-brot algorithm.</p> <p></p> <p>This image represents the \u03c7-recursive observer-state projection, demonstrating fractal alignment in Minesweeper theory.</p>"
    },
    { "location": "web_demo/", "title": "Web Demo \u2013 TBD", "text": "" },
    {
      "location": "why_torus_matters/",
      "title": "Why TORUS Matters",
      "text": "<p>The \u03c7-cycle and controller dimension principles are central to the Minesweeper Discovery Framework (MDF). These concepts enable hypothesis discovery by transforming complex domains into Minesweeper-style puzzles.</p>"
    },
    {
      "location": "why_torus_matters/#-cycle",
      "title": "\u03c7-cycle",
      "text": "<p>The \u03c7-cycle represents recursive patterns in data, such as prime residue distributions or noise patterns in gravitational wave detectors.</p>"
    },
    {
      "location": "why_torus_matters/#controller-dimension",
      "title": "Controller Dimension",
      "text": "<p>Controller dimension theory explains dynamic stabilization in systems, such as bicycle ghost-rider simulations.</p> <p>For more details, refer to the TORUS Theory paper.</p>"
    },
    {
      "location": "tutorials/discovering_phi_phase_reset/",
      "title": "Discovering \u03c6-Phase Reset",
      "text": "<p>This tutorial explains how to use the Phase-Lock Minesweeper module to detect \u03c6-phase resets in time-series data.</p>"
    },
    {
      "location": "tutorials/discovering_phi_phase_reset/#steps",
      "title": "Steps",
      "text": "<ol> <li>Configure the sampling rate and target frequency in <code>phase_lock_phi_config.yaml</code>.</li> <li>Use the <code>evaluate_cell</code> function to extract 14-cycle segments.</li> <li>Apply the Hilbert transform and compute \u0394\u03c6.</li> <li>Run the Rayleigh test to check for resets.</li> </ol>"
    },
    {
      "location": "tutorials/discovering_phi_phase_reset/#example",
      "title": "Example",
      "text": "<p>Refer to the notebook <code>PhaseLockMinesweeper.ipynb</code> for a demonstration.</p>"
    },
    {
      "location": "tutorials/element_discovery/",
      "title": "Element Discovery Tutorial",
      "text": ""
    },
    {
      "location": "tutorials/element_discovery/#overview",
      "title": "Overview",
      "text": "<p>This tutorial demonstrates how the AI Minesweeper Discovery Framework can be applied to uncover missing elements in the periodic table. The periodic table is represented as a grid, where each cell corresponds to an element. Discovered elements are marked as safe, while undiscovered elements are treated as mines.</p>"
    },
    {
      "location": "tutorials/element_discovery/#dataset",
      "title": "Dataset",
      "text": "<p>The dataset used for this demo is <code>examples/boards/elements.csv</code>. It includes: - atomic_number: The atomic number of the element. - symbol: The chemical symbol. - group: The group number in the periodic table. - period: The period number in the periodic table. - is_discovered: A boolean indicating whether the element is discovered.</p>"
    },
    {
      "location": "tutorials/element_discovery/#rules",
      "title": "Rules",
      "text": "<ul> <li>A revealed cell provides a clue indicating the number of undiscovered elements adjacent to it.</li> <li>Adjacent relationships are based on the periodic table layout (groups and periods).</li> </ul>"
    },
    {
      "location": "tutorials/element_discovery/#steps",
      "title": "Steps",
      "text": "<ol> <li>Launch the Streamlit app:    <code>bash    streamlit run streamlit_app.py</code></li> <li>Select \"Periodic Table (Element Discovery)\" from the domain menu.</li> <li>Observe the periodic table grid and interact with the solver to reveal clues and identify undiscovered elements.</li> </ol>"
    },
    {
      "location": "tutorials/element_discovery/#example",
      "title": "Example",
      "text": "<p>Revealing Oxygen (O) might show a clue \"1\", indicating one of its adjacent cells contains an undiscovered element.</p>"
    },
    {
      "location": "tutorials/element_discovery/#notes",
      "title": "Notes",
      "text": "<p>This demo is a simplified representation of the periodic table and is intended for educational purposes.</p>"
    },
    {
      "location": "tutorials/prime_residue_recursion/",
      "title": "Prime Residue Recursion",
      "text": "<p>This tutorial explains how to use the Prime Residue Minesweeper module to analyze prime spirals.</p>"
    },
    {
      "location": "tutorials/prime_residue_recursion/#steps",
      "title": "Steps",
      "text": "<ol> <li>Configure the prime window and \u03c6 constant in <code>primes_chi_config.yaml</code>.</li> <li>Use the <code>build_board</code> function to create a board.</li> <li>Evaluate cells using <code>evaluate_cell</code>.</li> <li>Compute the ridge score using <code>compute_ridge_score</code>.</li> </ol>"
    },
    {
      "location": "tutorials/prime_residue_recursion/#example",
      "title": "Example",
      "text": "<p>Refer to the notebook <code>PrimeResidueMinesweeper.ipynb</code> for a demonstration.</p>"
    },
    {
      "location": "whitepaper_src/whitepage/",
      "title": "What is AI-Minesweeper?",
      "text": "<p>AI-Minesweeper is a hypothesis discovery framework inspired by the classic game Minesweeper. It uses epistemic reasoning to uncover hidden patterns, contradictions, and gaps in structured datasets. The framework is designed to be domain-agnostic, allowing researchers to plug in custom datasets and adjacency logic.</p>"
    },
    {
      "location": "whitepaper_src/whitepage/#plug-in-design",
      "title": "Plug-in Design",
      "text": "<p>The framework supports modular plug-ins for domain-specific logic. Each plug-in defines adjacency rules, clue generation, and hypothesis evaluation tailored to the dataset.</p>"
    },
    {
      "location": "whitepaper_src/whitepage/#demo-list",
      "title": "Demo List",
      "text": "<ul> <li>TORUS Demo: Explore topological patterns.</li> <li>Cymatics Demo: Analyze wave interference data.</li> <li>Prime-Spiral Demo: Investigate prime number distributions.</li> <li>Periodic Table Demo: Discover gaps and anomalies in the periodic table.</li> </ul>"
    },
    {
      "location": "whitepaper_src/whitepage/#torus-integration",
      "title": "TORUS Integration",
      "text": "<p>TORUS is a complementary tool for topological data analysis. AI-Minesweeper integrates with TORUS to enhance hypothesis discovery in spatial datasets.</p>"
    },
    {
      "location": "whitepaper_src/whitepage/#case-study-2-hunting-super-heavy-elements",
      "title": "Case Study 2 \u2013 Hunting Super-Heavy Elements",
      "text": "<p>The periodic-table domain adapter demonstrates hypothesis discovery in nuclear physics. Weighted clues guide the search for unbound isotopes, treating unstable nuclei as mines. This approach highlights gaps in nuclear stability metrics, enabling predictions for super-heavy elements like Z 119\u2013126.</p>"
    }
  ]
}
